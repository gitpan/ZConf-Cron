#!/usr/bin/perl
#Copyright (c) 2012, Zane C. Bowers-Hadley
#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without modification,
#are permitted provided that the following conditions are met:
#
#   * Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
#WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
#INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
#BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#THE POSSIBILITY OF SUCH DAMAGE.

use strict;
use warnings;
use Getopt::Std;
use ZConf::Cron;
use Term::CallEditor qw/solicit/;

$Getopt::Std::STANDARD_HELP_VERSION = 1;

#version function
sub main::VERSION_MESSAGE {
	print "zccrontab 0.1.0\n";
};

#print help
sub main::HELP_MESSAGE {
	print "\n".
		"-s <zconf set>  The zconf set to use.\n".
		"-t <tab>  The tab to use.\n".
		"-l  Shows a tab.\n".
		"-r  Removes a tab.\n".
		"-e  Edits a tab.\n".
		"-L  List tabs.\n".
		"-a  Adds a tab.\n`";
}

#gets the options
my %opts;
getopts('s:t:lreLa', \%opts);

if (!defined($opts{t})) {
	$opts{t}="default";
}

#inits ZConf::Cron
my $zccron=ZConf::Cron->new;
if ( $zccron->error ){
	exit $zccron->error;
}
if ( defined( $opts{s} ) ){
	$zccron->setSet( $opts{s} );
	if ( $zccron->error ){
		exit $zccron->error;
	}
}

#list the specified tab
if (defined($opts{l})) {
	my $tab=$zccron->getTab( $opts{t} );
	if ( $zccron->error ){
		exit $zccron->error;
	}

	print $tab;

	exit 0;
}

#lists the tabs
if (defined($opts{L})) {
	my @tabs=$zccron->listTabs;
	if ( $zccron->error ){
		exit $zccron->error;
	}

	if ( ! defined( $tabs[0] ) ){
		exit 0;
	}

	print join("\n",@tabs)."\n";

	exit 0;
}

#adds a tab
if (defined($opts{a})){
	$zccron->setTab( $opts{t}, '' );

	if ( $zccron->error ){
		exit $zccron->error;
	}

	exit 0;
}

#removes a tab
if (defined($opts{r})){
	$zccron->delTab( $opts{t} );

	if ( $zccron->error ){
		exit $zccron->error;
	}

	exit 0;
}

#edits a tab
if (defined($opts{e})){

	my $tab=$zccron->getTab( $opts{t} );
	
	if ( $zccron->error ){
		exit $zccron->error;
	}

	my $fh=solicit($tab);

	$tab=join('', <$fh> );

	$zccron->setTab( $opts{t}, $tab );

	if ( $zccron->error ){
		exit $zccron->error;
	}

	exit 0;
}

=head1 NAME

zccrontab - Edit crontabs stored via L<ZConf::Cron>.

=head1 SYNOPSIS

zccrontab [B<-s> <ZConf set>] B<-t> <tab> [B<-c>} [B<-l>] [B<-r>] [B<-e>] [B<-L>] [B<-a>]

=head1 SWITCHES

=head2 B<-s> <ZConf set>

This is a optional switch to specify what ZConf set to use.

=head2 B<-c>

This creates a the 'zccron' config if it does not exist and if it does exist
create the needed set.

=head2 B<-t> <tab>

The tab to operate on.

=head2 B<-l>

Shows the specified tab.

=head2 B<-r>

Removes the specified tab.

=head2 B<-e>

Edit the specified config.

=head2 B<-L>

List the various tabs.

=head2 B<-a>

Add a tab.

=head1 AUTHOR

Copyright (c) 2012, Zame C. Bowers-Hadley <vvelox@vvelox.net>

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS` OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

=head1 README

zccron - A editor and manager for tabs for L<ZConf::Cron>.

=cut
